#!/usr/bin/env bash

# Using: specho onApt snapOn holy-be-on
holy-dot src/ install util os bin-fn/ check-x silent

# Just one arg - keep it simple - in case you want to save before an upgrade
no_color=false # show color by default
[[ "$1" == "--no-color" ]] && no_color=true
no_color_node="$(tis-true $no_color && echo -n --no-color)" # npm and apm
# TODO: no_color_lein for lein ancient check-profiles #or strip with code

# NOTE: brewOn ignored on purpose due to HOLY_BREW_ON ambiguity
if check-x brew; then
  specho Homebrew:
  if holy-be-on brew; then
    brew_out="$(brew outdated | tee /dev/stderr | wc -l)"
    if [ "$brew_out" == "0" ]; then
      echo "Packages up to date."
    fi
  fi
fi

if onApt; then
  specho Apt:
  # WARNING: apt does not have a stable CLI interface.
  apt list --upgradeable 2>/dev/null
fi

if snapOn; then
  specho Snap:
  snap refresh --list 2>&1
fi

# NOTE: Flatpak doesn't seem to have a concept of outdated packages,
# and though it auto-updates - an explicit update would run blindly.

if check-x python && check-x pip-review; then
  specho Python:
  if holy-be-on platform/python; then
    pip-review
  fi
fi

# Atom is not commonly expected - check with a silent holy on.
# It's normally updated through the app anyway.
if silent holy on desktop/editor/atom; then
  specho Atom:
  # NOTE alias: als-up
  apm upgrade -l $no_color_node
fi

if check-x npm; then
  specho NPM:
  # NOTE alias: nls-up
  if holy-be-on platform/node; then
    npm -g outdated --depth=0 $no_color_node
    if [ $? -eq 0 ]; then
      echo All up-to-date.
    fi
  fi
fi

# This one simply keeps quiet if conditions aren't met.
# It's only for certain dev environments...
if check-x lein && [ -f ~/.lein/profiles.clj ] \
 && silent holy on platform/clojure; then
    specho Leiningen User Profiles:
    lein ancient check-profiles ~/.lein/profiles.clj 2>/dev/null
else
  echo # because npm has no spacing after, this adds symmetry
fi

# Only informing, as being outdated isn't an error.
exit 0
