#!/usr/bin/env bash

source "$DOTS_HOME/use/helpers/os.sh"

# borrowed from https://gist.github.com/brentertz/1384279

if onMac; then
  echo "Mac OS"
  brew install rbenv
  brew install ruby-build
elif onApt; then
  echo "Apt Linux"
  # Debian / Ubuntu can sudo apt install rbenv ruby-build
  # that's easier, foolproof and automatically upgradable
  # consider switching to those with the next install ...

  # dependencies needed for building ruby
  sudo apt install -y libssl-dev libreadline-dev zlib1g-dev

  echo '' >> ~/.bashrc # add an empty line space

  cd
  git clone git://github.com/rbenv/rbenv.git .rbenv
  echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc

  git clone git://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
  echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc

  echo 'eval "$(rbenv init -)"' >> ~/.bashrc
  exec $SHELL

  # to get more ruby versions, down the road:
  # $ cd ~/.rbenv/plugins/ruby-build
  # $ git pull
  # $ rbenv install --list

  # This plugin is deprecated since its behavior is now included in rbenv core.
  # git clone https://github.com/rbenv/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash
else
  echo "No ${KERNEL_NAME} system match!"
fi

if [ ! -f ~/.bundle/config ]; then mkdir -p ~/.bundle && printf -- "---\nBUNDLE_PATH: vendor/bundle\n" >> ~/.bundle/config; fi

if [ ! -f ~/.irbrc ]; then printf "require 'irb/completion'\n" >> ~/.irbrc; fi

if [ ! -f ~/.gemrc ]; then echo "gem: --no-ri --no-rdoc" >> ~/.gemrc; fi

if [ -x rbenv ]; then
  # rbenv install --list
  rbenv install 2.6.3
  rbenv global 2.6.3

  gem install bundler --pre
  # TODO: install ./packages/gem
  # rbenv rehash #after installing binaries is automatic / no longer needed

  # per project:
  # rbenv local 1.9.3-p551
  # bundle # installs Gemfile gems to vendor/bundle
fi
