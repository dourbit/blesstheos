#!/usr/bin/env bash

# borrowed from https://gist.github.com/brentertz/1384279

# sometimes not present
# system_name=`uname -s`

if [ "$system_name" == 'Darwin' ]; then
  brew install rbenv
  brew install ruby-build
elif [ "$system_name" == 'Linux' ]; then
  echo "Linux"
  cd
  git clone git://github.com/sstephenson/rbenv.git .rbenv
  echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
  echo 'eval "$(rbenv init -)"' >> ~/.bashrc
  exec $SHELL

  git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
  echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
  exec $SHELL

  # to get more ruby versions, down the road:
  # $ cd ~/.rbenv/plugins/ruby-build
  # $ git pull
  # $ rbenv install --list

  git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash

  # dependencies needed for building ruby
  sudo apt-get install -y libssl-dev libreadline-dev
else
  echo "No ${system_name} system match!"
fi

if [ ! -f ~/.bundle/config ]; then mkdir -p ~/.bundle && printf -- "---\nBUNDLE_PATH: vendor/bundle\n" >> ~/.bundle/config; fi

if [ ! -f ~/.irbrc ]; then printf "require 'irb/completion'\n" >> ~/.irbrc; fi

if [ ! -f ~/.gemrc ]; then echo "gem: --no-ri --no-rdoc" >> ~/.gemrc; fi

if [ -x rbenv ]; then
  # rbenv install --list
  rbenv install 2.5.1
  rbenv rehash #after installing binaries
  rbenv global 2.5.1

  gem install bundler --pre
  # TODO: install ./packages/gem
  rbenv rehash

  # per project:
  # rbenv local 1.9.3-p551
  # bundle # installs Gemfile gems to vendor/bundle
fi
