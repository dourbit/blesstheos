#!/usr/bin/env bash

# install/node && . use/platform/node && nvm use

# Node.js via Node Version Manager
# https://github.com/nvm-sh/nvm
# See also:
# `bin/nvm-up` - upgrade of nvm itself
# `src/node.sh` - for switching between versions and upgrading
# `use/aliases/npm.sh` - useful command aliases

# Depends holy on brew (if onMac)
# Install clojure modules (if holy on platform/clojure)
# Using: onLinux onMac specho
holy-dot src/ os node util

# lts/* is the default node, call with "stable" if more recent node is preferred
[[ $# -eq 0 ]] && kind="lts/*" || kind="$1"


# NVM
if onLinux; then
  specho "Linux nvm install..."
  echo
  mkdir -p ~/.nvm
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
elif onMac && check-x brew; then
  specho "MacOS nvm install via brew..."
  echo
  mkdir -p ~/.nvm
  cp $(brew --prefix nvm)/nvm-exec ~/.nvm/
else
  echo "System '${HOLY_KERNEL}' does not meet current requirements."
  exit 1
fi

# NOTE: immediate nvm use without a new shell session, need to keep it here!
holy-dot use/platform/node


# Configuration options
echo "$kind" > ~/.nvmrc # nvm use (rather than nvm use default)

# Some ~/.npmrc options
npm set save-exact true

echo
node-to "$kind" # if node already installed, will reinstall current packages
# Note that the above also makes "lts/*" the default + does `nvm use default`.
status=$?


# TODO: perhaps this belongs to install/npm-local or just install/npm-develop
if onMac; then
  echo "local-npm to be revived..."
  # TODO: extract to install local-npm via Docker for any development machine
  # NOTE: wait for local-npm 3.0 first
  # https://github.com/local-npm/local-npm
  # https://github.com/local-npm/local-npm/projects/1

  # https://github.com/local-npm/local-npm-launch-agent
  # local / offline partial npm registry cache (only for MacOS)
  # curl -sL https://raw.githubusercontent.com/nolanlawson/local-npm-launch-agent/master/script.py | python -
fi


specho npm install --global packages

# Always have the following packages installed
npm-i -g npm-check npm-check-updates yarn json

# Clojure not depending on node, useful though, and usually...
# clojure installed before node, using install/_all or similar
if check-x clojure && silent holy on platform/clojure; then
  npm-i -g node-cljfmt
fi

echo
exit $status
