#!/usr/bin/env bash

COMMAND_FN=urbito

usage() {
  cat <<EOF
Usage: $COMMAND_FN <command> [args]

The following commands can be run, some of which provide their own usage info:
  install > downloads some scripts from https://github.com/asssaf/urbit-docker
  cmd > check if a command exists, and can be run + return path to its script
  piers > a list of urbit assets contained in ~/data/urbit - available to run
  hex-seed > hexdump -n 32 -e '4/4 "%08X"' /dev/random # for network keys gen
  new-ship > create a ship which is usually a planet for which you have a .key
  new-comet > get a new comet - usually takes some non-trivial time to mine
  run > boots a ship or comet - one of your urbit assets
  run-localhost > the goal is to run a docker container in the background...
EOF
}

errcho() { cat <<< "$@" 1>&2; }

urbito() {
  if [ $# -eq 0 ]; then
    usage; true; return
  elif [ $1 == "install" ]; then
    "$DOTS_HOME/install/urbit"
  elif [ $1 == "hex-seed" ]; then
    hexdump -n 32 -e '4/4 "%08X"' /dev/random
    echo
  elif [ $1 == "cmd" ]; then
    if [ $# -eq 1 ]; then
      errcho "Usage: $COMMAND_FN cmd <command>"
      false; return
    elif check-x ~/bin/urbito/$2; then
      echo ~/bin/urbito/$2
    elif check-x "$DOTS_HOME"/bin/urbito/$2; then
      echo "$DOTS_HOME"/bin/urbito/$2
    else
      usage; echo
      errcho "urbito $2 - Command not found"
      false; return
    fi
  elif [ $1 == "assets" ]; then
    ls "$HOME"/data/urbit | cat
  elif urbito cmd $1; then
    cd "$HOME"/data/urbit
    $(urbito cmd $1) ${@:2}
  else
    false; return
  fi
}

[ $(basename $0) != $COMMAND_FN ] && export -f $COMMAND_FN || $COMMAND_FN "$@"
