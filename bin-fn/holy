#!/usr/bin/env bash

COMMAND_FN=holy

usage() {
  cat <<EOF
Usage: $COMMAND_FN <command> [args]

  install   > runs the install script of an <ability> and turns it on
  on        > says if an <ability> has been istalled + it can holy on [holy]
  update    > does a git pull for \${HOLY_HOME}
  outdated  > same as ${HOLY_HOME}/bin/outdated
  upgrade   > same as ${HOLY_HOME}/bin/upgrade

EOF
}

errcho() { cat <<< "$@" 1>&2; }

holy-on() {
  if [ -d "$HOLY_HOME" ]; then
    echo "Holy On"
    true; return
  else
    echo "Holy Not On"
    false; return
  fi
}

installable() {
  local able=$1
  local path="${HOLY_HOME}/install/${able}"
  if [ $# -eq 0 ]; then
    find $HOLY_HOME/install -type f,l -executable -print \
    | sed -e "s/^.*\/install\///g" | sort \
    | grep -ve '.sh$\|-skip$'
    # TODO: show help regarding what the above installs?
    true; return
  elif check-x $path; then
    true; return
  else
    false; return
  fi
}

holy() {
  if [ $# -eq 0 ]; then
    usage; true; return
  else
    local holy_on #declaration
    holy_on=$(holy-on) #assignment must be separate to capture $? (bash bug)
    if [ $? -ne 0 ]; then
      errcho $holy_on
      # TODO: echo how to install blesstheos itself
      exit 1
    fi

    local cmd=$1
    shift

    if [ $cmd == "install" ]; then
      local able=$1
      local path="${HOLY_HOME}/install/${able}"
      if [ $# -eq 0 ]; then
        echo "Usage: $COMMAND_FN $cmd <ability>"
        echo
        installable
        echo
      elif installable $able; then
        $path
        echo $(git show --format="%h" --no-patch) > $HOLY_HOME/on/ability/$able
      else
        errcho "Not found: $path"
        false; return
      fi

    elif [ $cmd == "on" ]; then
      local able=$1
      local path="${HOLY_HOME}/on/ability/$able"
      if [[ $# -eq 0 || $able == "holy" ]]; then
        echo $holy_on # only the true branch can get this far
      else
        if [ -f $path ]; then
          echo "Installed on $(stat -c %y "$path")"
          true; return
        elif installable $able; then
          errcho "Turn on by: holy install $able"
          false return
        else
          errcho "Ability '$able' not on, nor is it install-able."
          false return
        fi
      fi

    elif [ $cmd == "update" ]; then
      cd "$HOLY_HOME" && git pull

    elif [ $cmd == "outdated" ]; then
      "${HOLY_HOME}/bin/outdated"

    elif [ $cmd == "upgrade" ]; then
      "${HOLY_HOME}/bin/upgrade"

    else
      errcho "Not found: holy $cmd"
      false; return
    fi
  fi
}

[ $(basename $0) != $COMMAND_FN ] && export -f $COMMAND_FN || $COMMAND_FN "$@"
