#!/usr/bin/env bash

# list exported functions
# show the code when name of function is given as $1

# https://www.computerhope.com/unix/bash/declare.htm
# `export -f` is same as `declare -fx` (at least for bash)

COMMAND_FN=check-fn
check-fn() {
  if [ $# -eq 0 ]; then
    count=0
    while read LINE; do
      echo $(echo $LINE | awk '{print $NF}')
      count=$(($count + 1))
    done < <(declare -Fx)
    echo "="
    echo "$count exported functions above"
    echo "check-fn <name> # for the code"
  else
    if ! declare -fp "$1" 2> /dev/null; then
      # check if in a subshell context, because:
      # when run as command, can't see functions that aren't exported
      [ $(basename $0) == $COMMAND_FN ] \
        && echo "$1 is not an exported function" \
        || echo "$1 is not declared as function"
      echo "try: type $1"
      false; return
    fi
  fi
}

[ $(basename $0) != $COMMAND_FN ] && export -f $COMMAND_FN || $COMMAND_FN "$@"
