#!/usr/bin/env bash

COMMAND_FN=urbit-os

custom-image() {
  if [ ! -z ${URBIT_IMAGE+x} ]; then
    echo "Custom URBIT_IMAGE=$URBIT_IMAGE"
  fi
}

docker-image() {
  echo $(docker --version)
  if [ ! -z ${URBIT_IMAGE+x} ]; then
    echo "URBIT_IMAGE=$URBIT_IMAGE"
  else
    echo "URBIT_IMAGE=asssaf/urbit:latest"
  fi
}

usage() {
  cat <<EOF
Usage: $COMMAND_FN <command> [args]

The following commands can be run, some of which provide their own usage info:

  install > downloads some scripts from https://github.com/asssaf/urbit-docker
  version > report through urbit -R "build info", including other versions too
  run-zod > runs a fakezod ship called zod to use for development & no network
  cmd > check if a command exists, and can be run + return path to its script
  piers > a list of urbit assets contained in ~/data/urbit - available to run
  hex-seed > hexdump -n 32 -e '4/4 "%08X"' /dev/random # for network keys gen
  new-ship > create a ship which is usually a planet for which you have a .key
  new-comet > get a new comet - usually takes some non-trivial time to mine
  run > boots a ship or comet - one of your urbit assets
  run-localhost > the goal is to run a docker container in the background...

EOF
}

errcho() { cat <<< "$@" 1>&2; }

urbit-os() {
  if [ $# -eq 0 ]; then
    usage; true; return
  else
    local cmd=$1
    if [ $cmd == "install" ]; then
      "$DOTS_HOME/install/urbit"
    elif [ $cmd == "version" ]; then
      urbit-os urbit -R
      echo
      docker-image
    elif [ $cmd == "hex-seed" ]; then
      hexdump -n 32 -e '4/4 "%08X"' /dev/random
      echo
    elif [ $cmd == "cmd" ]; then
      if [ $# -eq 1 ]; then
        errcho "Usage: $COMMAND_FN cmd <command>"
        false; return
      elif check-x ~/bin/urbit-os/$2; then
        echo ~/bin/urbit-os/$2
      elif check-x "$DOTS_HOME"/bin/urbit-os/$2; then
        echo "$DOTS_HOME"/bin/urbit-os/$2
      else
        usage
        errcho "urbit-os $2 - Command not found"
        false; return
      fi
    elif [ $cmd == "piers" ]; then
      ls "$HOME"/data/urbit | cat
    elif urbit-os cmd $cmd; then
      # cmd is a file to be run
      cd "$HOME"/data/urbit
      echo
      custom-image
      if [[ "$cmd" =~ ^run ]] && [[ "$2" =~ ^~ ]]; then
        $(urbit-os cmd $cmd) ${2:1} ${@:3} # remove the leading ~
      else
        $(urbit-os cmd $cmd) ${@:2}
      fi
    else
      false; return
    fi
  fi
}

[ $(basename $0) != $COMMAND_FN ] && export -f $COMMAND_FN || $COMMAND_FN "$@"
